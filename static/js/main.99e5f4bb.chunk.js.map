{"version":3,"sources":["components/img/sample.jpg","components/Header.js","components/Content.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","Navbar","bg","variant","Brand","className","React","Component","Bread","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","baritems","list_dir","forEach","element","index","length","push","Breadcrumb","Item","onClick","onChange","bind","active","foods","id","name","desc","Trolley","cols","items","last_index","food","Col","xs","Card","style","width","Img","src","sample","Body","Title","Text","Button","Row","Container","expand","href","Form","inline","FormControl","type","placeholder","Buffet","Content","_this2","state","list_option","food_option","seat_option","child","setState","concat","toConsumableArray","_this3","current","fooditems","ListGroup","action","Accordion","Toggle","as","eventKey","Collapse","seatitems","Content_Bread","Badge","Content_Trolley","Content_Buffet","Footer","sticky","App","components_Header","components_Content","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.99e5f4bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sample.5613a2ce.jpg\";","import React from 'react';\r\nimport {Navbar} from 'react-bootstrap';\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Brand className='text-md-center'>Singapore Airline</Navbar.Brand>\r\n    </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {\r\n  Accordion, Breadcrumb, ListGroup, Container, Row, Col, Card, \r\n  Button, Navbar, Form, FormControl, Badge}\r\n   from 'react-bootstrap';\r\nimport sample from './img/sample.jpg';\r\n\r\nclass Bread extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n  }\r\n  render() {\r\n  let baritems = [];\r\n  this.props.list_dir.forEach((element, index) => {\r\n      (index !== this.props.list_dir.length - 1 ? \r\n          baritems.push(<Breadcrumb.Item onClick={this.props.onChange.bind(this,element)}>{element}</Breadcrumb.Item>) : \r\n          baritems.push(<Breadcrumb.Item active>{element}</Breadcrumb.Item>));\r\n  });\r\n  return (\r\n      <Breadcrumb>\r\n          {baritems}\r\n      </Breadcrumb>\r\n  );\r\n}\r\n}\r\n\r\nconst foods = [\r\n  { \r\n    id : 1,\r\n    name : \"Apple\",\r\n    desc : \"This is apple.\"\r\n  },\r\n  { \r\n    id : 2,\r\n    name : \"Banana\",\r\n    desc : \"This is banana.\"\r\n  },\r\n  { \r\n    id : 3,\r\n    name : \"Coffee\",\r\n    desc : \"This is coffee.\"\r\n  },\r\n  { \r\n    id : 4,\r\n    name : \"Duck\",\r\n    desc : \"This is duck.\"\r\n  },\r\n  { \r\n    id : 5,\r\n    name : \"Duck\",\r\n    desc : \"This is duck.\"\r\n  },\r\n  { \r\n    id : 6,\r\n    name : \"Duck\",\r\n    desc : \"This is duck.\"\r\n  }\r\n];\r\n\r\nclass Trolley extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n  }\r\n  render() {\r\n  let cols = [];\r\n  let items = [];\r\n  let last_index = foods.length-1;\r\n  foods.forEach((food, index) => {\r\n    items.push(\r\n    <Col xs={6}>\r\n      <Card style={{ width: '100%' }} >\r\n        <Card.Img src={sample} />\r\n        <Card.Body>\r\n          <Card.Title>{food.name}</Card.Title>\r\n          <Card.Text>{food.desc}</Card.Text>\r\n          <Button variant=\"primary\">Location</Button>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    );\r\n    if (items.length === 2 || last_index === index){\r\n      cols.push(<Row className=\"justify-content-md-center\">{items}</Row>);\r\n      cols.push(<br />);\r\n      items = [];\r\n    } \r\n  });\r\n  return (\r\n  <Container>\r\n    <Col xs={12}>\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <Navbar.Brand href=\"#home\">Lounge Food Pre-ordering</Navbar.Brand>\r\n        <Form inline>\r\n          <FormControl type=\"text\" placeholder=\"Name of food\" />\r\n          <Button className=\"text-center\" variant=\"outline-success\">Filter</Button>\r\n        </Form>\r\n    </Navbar>\r\n    </Col>\r\n    {cols}\r\n  </Container>\r\n  );\r\n}\r\n}\r\n\r\nclass Buffet extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n  }\r\n  render() {\r\n  let cols = [];\r\n  let items = [];\r\n  let last_index = foods.length-1;\r\n  foods.forEach((food, index) => {\r\n    items.push(\r\n    <Col xs={6}>\r\n      <Card style={{ width: '100%' }} >\r\n        <Card.Img src={sample} />\r\n        <Card.Body>\r\n          <Card.Title>{food.name}</Card.Title>\r\n          <Card.Text>{food.desc}</Card.Text>\r\n          <Button variant=\"primary\">Location</Button>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    );\r\n    if (items.length === 2 || last_index === index){\r\n      cols.push(<Row className=\"justify-content-md-center\">{items}</Row>);\r\n      cols.push(<br />);\r\n      items = [];\r\n    } \r\n  });\r\n  return (\r\n  <Container>\r\n    <Col xs={12}>\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <Navbar.Brand href=\"#home\">Lounge Food List</Navbar.Brand>\r\n        <Form inline>\r\n          <FormControl type=\"text\" placeholder=\"Name of food\" />\r\n          <Button className=\"text-center\" variant=\"outline-success\">Filter</Button>\r\n        </Form>\r\n    </Navbar>\r\n    </Col>\r\n    {cols}\r\n  </Container>\r\n  );\r\n}\r\n}\r\n\r\nclass Content extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list_dir : [\"Home\"], // Current = list_dir[list_dir.length - 1]\r\n      list_option : [\"Food\", \"Seat\"],\r\n      food_option : [\"Trolley\", \"Buffet\"],\r\n      seat_option : [\"Booking\"]\r\n    };\r\n  }\r\n  onChange(child){\r\n    if (child !== \"Home\") {\r\n      this.setState({list_dir : [...this.state.list_dir, child]})\r\n    }else{\r\n      this.setState({list_dir : [\"Home\"]})\r\n    };\r\n  }\r\n  render() {\r\n    let current = this.state.list_dir[this.state.list_dir.length-1];\r\n    let baritems = [];\r\n    this.state.list_option.forEach((element, index) => {\r\n    if(element === \"Food\"){\r\n      let fooditems = [];\r\n      this.state.food_option.forEach((element) => {\r\n        fooditems.push(<ListGroup.Item action={true} onClick={this.onChange.bind(this, element)}>{element}</ListGroup.Item>);\r\n      });\r\n      baritems.push(<Accordion.Toggle className=\"d-flex justify-content-center\" as={Card.Header} variant=\"link\" eventKey={index}>{element}</Accordion.Toggle>);\r\n      baritems.push(<Accordion.Collapse eventKey={index}><ListGroup>{fooditems}</ListGroup></Accordion.Collapse>);\r\n    }else if(element === \"Seat\"){\r\n      let seatitems = [];\r\n      this.state.seat_option.forEach((element) => {\r\n        seatitems.push(<ListGroup.Item action={true} onClick={this.onChange.bind(this, element)}>{element}</ListGroup.Item>);\r\n      });\r\n      baritems.push(<Accordion.Toggle className=\"d-flex justify-content-center\" as={Card.Header} variant=\"link\" eventKey={index}>{element}</Accordion.Toggle>);\r\n      baritems.push(<Accordion.Collapse eventKey={index}><ListGroup>{seatitems}</ListGroup></Accordion.Collapse>);\r\n    }else{\r\n      baritems.push(<Accordion.Toggle className=\"d-flex justify-content-center\" as={Card.Header} variant=\"link\" eventKey={index}>{element}</Accordion.Toggle>);\r\n    }});\r\n    return (\r\n      <div>\r\n        <Bread list_dir={this.state.list_dir} onChange={this.onChange.bind(this)} />\r\n        {current === \"Home\" ?\r\n        <div>\r\n          <Badge className=\"d-flex justify-content-center\" variant=\"secondary\"><h5>Lounge Service</h5></Badge>\r\n          <Accordion><Card>{baritems}</Card></Accordion>\r\n        </div>\r\n        : null}\r\n        {current === \"Trolley\" ? <Trolley /> : null}\r\n        {current === \"Buffet\" ? <Buffet /> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\nimport {Navbar} from 'react-bootstrap';\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <Navbar sticky=\"bottom\" bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand className=\"text-center\">SeeFu @ 2019</Navbar.Brand>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport Content from './components/Content';\r\nimport Footer from './components/Footer';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Content />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}