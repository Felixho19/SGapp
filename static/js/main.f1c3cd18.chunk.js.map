{"version":3,"sources":["components/Header.js","components/Navigation.js","components/FoodReservation.js","components/Map.js","components/Seat.js","components/Footer.js","App.js","serviceWorker.js","index.js","components/img/sample.jpg"],"names":["Header","react_default","a","createElement","Navbar","bg","variant","Brand","className","React","Component","Navigation","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","collapseOnSelect","expand","as","Link","to","Toggle","aria-controls","Collapse","id","Nav","foods","name","desc","FoodReservation","cols","items","last_index","length","forEach","food","index","push","Col","xs","Card","style","width","Img","src","sample","Body","Title","Text","Button","Row","Form","block","FormControl","type","placeholder","Container","AnyReactComponent","_ref","text","Map","_this","state","center","lat","lng","zoom","height","lib_default","bootstrapURLKeys","key","yesIWantToUseGoogleMapApiInternals","defaultCenter","defaultZoom","Map_AnyReactComponent","Seat","Footer","sticky","QRCodePage","custNumber","styles","root","fontFamily","h1","textAlign","qrcode","dist_modules","level","value","JSON","stringify","firstName","lastName","class","flight","departureTime","destination","number","App","react_router_dom","basename","process","components_Header","components_Navigation","react_router","exact","path","component","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.f1c3cd18.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Navbar} from 'react-bootstrap';\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Brand className='text-md-center'>Singapore Airline</Navbar.Brand>\r\n    </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Navbar, Nav} from 'react-bootstrap';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Navigation extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"info\" variant=\"light\">\r\n                <Navbar.Brand as={Link} to=\"/\">Lounge Service</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link as={Link} to=\"/foodReservation\">Order Food</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/map\">Map</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/seat\">Seat</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/QRcode\">Order information (debug)</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n                </Navbar>\r\n        );\r\n    }\r\n  }\r\n\r\n  export default Navigation;","import React from 'react';\r\nimport { Container, Row, Col, Card, Button, Navbar, Form, FormControl}\r\n   from 'react-bootstrap';\r\nimport sample from './img/sample.jpg';\r\n\r\nconst foods = [\r\n    { \r\n      id : 1,\r\n      name : \"Apple\",\r\n      desc : \"This is apple.\"\r\n    },\r\n    { \r\n      id : 2,\r\n      name : \"Banana\",\r\n      desc : \"This is banana.\"\r\n    },\r\n    { \r\n      id : 3,\r\n      name : \"Coffee\",\r\n      desc : \"This is coffee.\"\r\n    },\r\n    { \r\n      id : 4,\r\n      name : \"Duck\",\r\n      desc : \"This is duck.\"\r\n    },\r\n    { \r\n      id : 5,\r\n      name : \"Duck\",\r\n      desc : \"This is duck.\"\r\n    },\r\n    { \r\n      id : 6,\r\n      name : \"Duck\",\r\n      desc : \"This is duck.\"\r\n    }\r\n  ];\r\n\r\nclass FoodReservation extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let cols = [];\r\n        let items = [];\r\n        let last_index = foods.length-1;\r\n        foods.forEach((food, index) => {\r\n          items.push(\r\n          <Col xs={6}>\r\n            <Card style={{ width: '100%' }} >\r\n              <Card.Img src={sample} />\r\n              <Card.Body>\r\n                <Card.Title>{food.name}</Card.Title>\r\n                <Card.Text>{food.desc}</Card.Text>\r\n                <Button variant=\"primary\">Location</Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          );\r\n          if (items.length === 2 || last_index === index){\r\n            cols.push(<Row className=\"justify-content-md-center\">{items}</Row>);\r\n            cols.push(<br />);\r\n            items = [];\r\n          } \r\n        });\r\n        return (\r\n        <div>\r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n            <Navbar.Brand>Food Pre-ordering</Navbar.Brand>\r\n                <Form block> \r\n                    <Row>\r\n                        <Col>\r\n                            <FormControl type=\"text\" placeholder=\"Name of food\" />\r\n                        </Col>\r\n                        <Col>\r\n                            <Button className=\"text-center\" variant=\"outline-success\">Filter</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Navbar>\r\n            <Container> \r\n                {cols}\r\n            </Container>\r\n        </div>\r\n        );\r\n    }\r\n  }\r\n\r\n  export default FoodReservation;","import React from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\r\nclass Map extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            center: {\r\n                lat: 59.95,\r\n                lng: 30.33\r\n            },\r\n            zoom: 11\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ height: '100vh', width: '100%' }}>\r\n                <GoogleMapReact\r\n                bootstrapURLKeys={{key: \"AIzaSyAwDlaMxPqLGTAchUYWM6mO7r__BqOkiFI\"}}\r\n                yesIWantToUseGoogleMapApiInternals\r\n                defaultCenter={this.state.center}\r\n                defaultZoom={this.state.zoom}\r\n                >\r\n                    <AnyReactComponent\r\n                    lat={59.955413}\r\n                    lng={30.337844}\r\n                    text=\"My Marker\"\r\n                    />\r\n                </GoogleMapReact>\r\n            </div>\r\n        );\r\n    }\r\n  }\r\n\r\n  export default Map;","import React from 'react';\r\n\r\nclass Seat extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (<div></div>);\r\n    }\r\n  }\r\n\r\n  export default Seat;","import React from 'react';\r\nimport {Navbar} from 'react-bootstrap';\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <Navbar sticky=\"bottom\" bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand className=\"text-center\">SeeFu @ 2019</Navbar.Brand>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport Navigation from './components/Navigation';\r\nimport FoodReservation from './components/FoodReservation';\r\nimport Map from './components/Map';\r\nimport Seat from './components/Seat';\r\nimport Footer from './components/Footer';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { QRCode } from 'react-qr-svg';\r\n\r\nclass QRCodePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      custNumber : '1'\r\n    }\r\n  }\r\n  render(){\r\n    const styles = {\r\n      root: {\r\n        fontFamily: 'sans-serif',\r\n      },\r\n      h1: {\r\n        textAlign: 'center',\r\n      },\r\n      qrcode: {\r\n        textAlign: 'center',\r\n      },\r\n    };\r\n\r\n    return(\r\n      <div style={styles.root}>\r\n      <h1 style={styles.h1}>Lounge Reservation</h1>\r\n      <div style={styles.qrcode}>\r\n        <QRCode\r\n          level=\"Q\"\r\n          style={{ width: 256 }}\r\n          value={JSON.stringify({\r\n            firstName: \"Tony\",\r\n            lastName: \"Mok\",\r\n            class: \"First Class\",\r\n            flight: \"SQ865\",\r\n            departureTime: \"18:50\",\r\n            destination: \"Singapore Changi Airport (SIN)\",\r\n            number: this.state.custNumber\r\n          })}\r\n        />\r\n      </div>\r\n\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <div className=\"App\">\r\n          <Header />\r\n          <Navigation />\r\n          <Switch>\r\n            <Route exact path=\"/foodReservation\"\r\n              component={FoodReservation} />\r\n            <Route exact path=\"/map\"\r\n              component={Map} />\r\n            <Route exact path=\"/seat\"\r\n              component={Seat} />\r\n            <Route exact path=\"/QRcode\"\r\n              component={QRCodePage} />\r\n            <Route component={() => (<div></div>)}/>\r\n          </Switch>\r\n          <Footer />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/sample.5613a2ce.jpg\";"],"sourceRoot":""}